{"version":3,"file":"scripts.min.js","mappings":"gBAgDMA,EAAUC,OACD,QAAf,EAAAD,EAAOE,gBAAQ,QAAfF,EAAOE,SAAa,CAAC,GACD,QAApB,KAAAF,EAAOE,UAASC,YAAI,UAAJA,KAlDhB,WACkBC,SAASC,iBAAiB,oBAElCC,SAAQ,SAACC,GACfA,EAAOC,iBAAiB,SAAS,WAC/B,IACMC,EAAM,IAAIC,IADNH,EACYI,MACtBV,OAAOW,SAASC,KAAOJ,EAAII,IAC7B,GACF,IAEA,IAAIC,EAAiB,IAAIJ,IAAIT,OAAOW,SAASD,MAAME,KAqBhDC,GAKH,SAASC,EAAaC,GACnBA,EAAqBC,QAEtB,IAAIC,EAAiBF,EAAKG,cAAcC,uBACrCF,GAAkBA,EAAeG,UAAUC,SAAS,WACrDP,EAAaG,EAEjB,CAVEH,CADiBX,SAASmB,cAAc,kBAAWT,EAAc,OAYrE,E","sources":["webpack://app-success-story/./src/ts/index.ts"],"sourcesContent":["function initAppFiles() {\r\n  const folders = document.querySelectorAll('[data-folder-id]');\r\n\r\n  folders.forEach((folder) => {\r\n    folder.addEventListener('click', () => {\r\n      const f = folder as HTMLAnchorElement;\r\n      const url = new URL(f.href);\r\n      window.location.hash = url.hash;\r\n    });\r\n  });\r\n  \r\n  let currentUrlHash = new URL(window.location.href).hash;\r\n  \r\n  // if(currentUrlHash) {\r\n  //   let hash = currentUrlHash.replace(\"#\",\"\");\r\n  \r\n  //   var hashFolder = document.getElementById(hash);\r\n  //   openCollapse(hashFolder)\r\n  // }\r\n  \r\n  // function openCollapse(elem: HTMLElement) {\r\n  \r\n  //   var bsCollapse = new (bootstrap as any).Collapse(elem);\r\n  \r\n  //   // bsCollapse.show();\r\n  \r\n  //   let parentCollapse = elem.closest('.collapse') as HTMLElement;\r\n  //   if(parentCollapse) {\r\n  //     openCollapse(parentCollapse);\r\n  //   }\r\n  // }\r\n\r\n  if(currentUrlHash) {\r\n    var hashFolder = document.querySelector(`a[href='${currentUrlHash}']`);\r\n    openCollapse(hashFolder)\r\n  }\r\n  \r\n  function openCollapse(elem: Element) {\r\n    (elem as HTMLElement).click();\r\n  \r\n    let parentCollapse = elem.parentElement.previousElementSibling;\r\n    if(parentCollapse && parentCollapse.classList.contains('folder')) {\r\n      openCollapse(parentCollapse);\r\n    }\r\n  }  \r\n}\r\n\r\n// so it can be called from the HTML when content re-initializes dynamically\r\nconst winAny = (window as any);\r\nwinAny.appFiles ??= {};\r\nwinAny.appFiles.init ??= initAppFiles;\r\n\r\n"],"names":["winAny","window","appFiles","init","document","querySelectorAll","forEach","folder","addEventListener","url","URL","href","location","hash","currentUrlHash","openCollapse","elem","click","parentCollapse","parentElement","previousElementSibling","classList","contains","querySelector"],"sourceRoot":""}